{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","App","props","classes","useState","testing","setTesting","useEffect","a","axios","get","then","res","console","log","data","message","Card","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAMMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,OAAQ,CACNC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,MA0BHC,MAtBf,SAAaC,GACX,IAAMC,EAAUd,IADE,EAEYe,mBAAS,IAFrB,mBAEXC,EAFW,KAEFC,EAFE,KAalB,OAVAC,qBAAU,WACR,sBAAC,sBAAAC,EAAA,sEACOC,IAAMC,IAAI,cACbC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChBT,EAAWM,EAAIG,KAAKC,YAJzB,0CAAD,KAOC,CAACd,IAGF,mCACE,cAACe,EAAA,EAAD,CAAMC,UAAWf,EAAQZ,KAAzB,SACE,6BAAKc,SC3BEc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.257b974c.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction App(props) {\n  const classes = useStyles();\n  const [testing, setTesting] = useState('');\n  useEffect(() => {\n    (async () => {\n      await axios.get('/home/test')\n        .then((res) => {\n          console.log(res.data);\n          setTesting(res.data.message);\n        })\n    })();\n  }, [props])\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <h1>{testing}</h1>      \n      </Card>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}